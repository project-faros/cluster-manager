- name: install openshift local storage
  hosts: localhost
  become: no
  gather_facts: no

  tasks:
    - name: get storage node drive id paths
      shell: "oc debug -n default node/{{ item }} -- chroot /host find /dev/disk/by-id -type l -exec readlink -nf {} ';' -exec echo ': {}' ';' | egrep '(wwn|eui)' | sed 's/\\/dev\\///'"
      loop: "{{ stg_drives | json_query('[*].host') }}"
      register: drive_id_lkp
      changed_when: no

    - name: save storage node drive id paths
      set_fact:
        drive_ids: "{{ drive_ids|default({}) | combine({ item.item : item.stdout | from_yaml }) }}"
      loop: "{{ drive_id_lkp.results }}"
      changed_when: no

    - name: ensure project exists
      k8s:
        state: present
        definition:
          apiVersion: project.openshift.io/v1
          kind: Project
          metadata:
            name: local-storage
          spec:

    - name: ensure operatorgroup exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: local-storage
            namespace: local-storage
          spec:
            targetNamespaces:
            - local-storage

    - name: ensure subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: local-storage-operator
            namespace: local-storage
          spec:
            channel: "{{ lookup('ini', 'local_storage section=operators file=/app/versions.ini') }}"
            name: local-storage-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: save clusterserviceversion object
      set_fact:
        k8s_obj:
          apiVersion: operators.coreos.com/v1alpha1
          kind: ClusterServiceVersion
          name: local-storage-operator*
          namepace: local-storage

    - name: wait for operator to become ready
      assert:
        that: "lookup('k8s', resource_definition=k8s_obj)[0].status.phase | default('error') == 'Succeeded'"
      register: op_lkp
      until: op_lkp is success
      retries: 60
      delay: 15

    - name: lookup storage device id paths
      set_fact:
        stg_devices: "{{ stg_devices|default([]) + [ drive_ids[item.0.host][item.1] ] }}"
      loop: "{{ lookup('subelements', stg_drives, 'drives') }}"

    - name: ensure storage nodes are labeled
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Node
          metadata:
            name: "{{ item }}"
            labels:
              cluster.ocs.openshift.io/openshift-storage: ""
      loop: "{{ cluster_nodes }}"
      when: "item in stg_nodes"

    - name: ensure non-storage nodes are not labeled
      k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Node
          metadata:
            name: "{{ item }}"
            labels:
              cluster.ocs.openshift.io/openshift-storage: null
      loop: "{{ cluster_nodes }}"
      when: "item not in stg_nodes"

    - name: create localvolume object
      k8s:
        state: present
        definition:
          apiVersion: local.storage.openshift.io/v1
          kind: LocalVolume
          metadata:
            name: local-block
            namespace: local-storage
          spec:
            nodeSelector:
              nodeSelectorTerms:
              - matchExpressions:
                  - key: cluster.ocs.openshift.io/openshift-storage
                    operator: Exists
            storageClassDevices:
              - storageClassName: localblock
                volumeMode: Block
                devicePaths: "{{ stg_devices }}"
