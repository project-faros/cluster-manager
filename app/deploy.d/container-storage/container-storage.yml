- name: install openshift container storage
  hosts: localhost
  become: no
  gather_facts: no

  tasks:
    - name: ensure project exists
      k8s:
        state: present
        definition:
          apiVersion: project.openshift.io/v1
          kind: Project
          metadata:
            name: openshift-storage
            annotations:
              openshift.io/cluster-monitoring: "true"
          spec:

    - name: ensure operatorgroup exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1
          kind: OperatorGroup
          metadata:
            name: openshift-storage
            namespace: openshift-storage
          spec:
            targetNamespaces:
            - openshift-storage

    - name: ensure subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: ocs-operator
            namespace: openshift-storage
          spec:
            channel: "{{ lookup('ini', 'container_storage section=operators file=/app/versions.ini') }}"
            name: ocs-operator
            source: redhat-operators
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: save clusterserviceversion object
      set_fact:
        k8s_obj:
          apiVersion: operators.coreos.com/v1alpha1
          kind: ClusterServiceVersion
          name: ocs-operator*
          namepace: openshift-storage

    - name: wait for operator to become ready
      assert:
        that: "lookup('k8s', resource_definition=k8s_obj)[0].status.phase | default('error') == 'Succeeded'"
      retries: 60
      delay: 15

    - name: ensure storagecluster exists
      k8s:
        state: present
        definition:
          apiVersion: ocs.openshift.io/v1
          kind: StorageCluster
          metadata:
            name: ocs-storagecluster
            namespace: openshift-storage
          spec:
            manageNodes: false
            monDataDirHostPath: /var/lib/rook
            storageDeviceSets:
            - count: "{{ drives_per_node }}"
              dataPVCTemplate:
                spec:
                  accessModes:
                  - ReadWriteOnce
                  resources:
                    requests:
                      storage: 1Gi
                  storageClassName: localblock
                  volumeMode: Block
              name: ocs-deviceset
              placement: {}
              portable: false
              replica: 3
              resources:
                mds:
                  limits:
                    cpu: 0.5
                  requests:
                    cpu: 0.25
                noobaa-core:
                  limits:
                    cpu: 0.5
                    memory: 4Gi
                  requests:
                    cpu: 0.25
                    memory: 2Gi
                noobaa-db:
                  limits:
                    cpu: 0.5
                    memory: 4Gi
                  requests:
                    cpu: 0.25
                    memory: 2Gi
                mon:
                  limits:
                    cpu: 0.5
                    memory: 2Gi
                  requests:
                    cpu: 0.25
                    memory: 1Gi
                rook-ceph-rgw:
                  limits:
                    cpu: 250m
                    memory: 2Gi
                  requests:
                    cpu: 100m
                    memory: 1Gi
