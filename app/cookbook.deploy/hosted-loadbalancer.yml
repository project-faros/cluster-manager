- name: install self-hosted load balancer
  hosts: localhost
  become: no
  gather_facts: no

  tasks:
    - name: ensure namespace exists
      k8s:
        name: openshift-hosted-loadbalancer
        api_version: v1
        kind: Namespace
        state: present

    - name: ensure service account exists
      k8s:
        name: hosted-loadbalancer-operator
        api_version: v1
        kind: ServiceAccount
        namespace: openshift-hosted-loadbalancer
        state: present

    - name: ensure role exists
      k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: Role
          metadata:
            name: hosted-loadbalancer-operator
            namespace: openshift-hosted-loadbalancer
          rules:
          - apiGroups:
            - ""
            resources:
            - pods
            - services
            - services/finalizers
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            - serviceaccounts
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - apps
            resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - security.openshift.io
            resources:
            - securitycontextcontraints
            verbs:
            - get
            - list
            - update
            - patch
          - apiGroups:
            - security.openshift.io
            resourceNames:
            - privileged
            resources:
            - securitycontextconstraints
            verbs:
            - use
          - apiGroups:
            - rbac.authorization.k8s.io
            resources:
            - roles
            - clusterroles
            - rolebindings
            - clusterrolebindings
            verbs:
            - get
            - list
            - delete
            - create
            - update
            - patch
            - watch
          - apiGroups:
            - monitoring.coreos.com
            resources:
            - servicemonitors
            verbs:
            - get
            - create
          - apiGroups:
            - apps
            resourceNames:
            - operator
            resources:
            - deployments/finalizers
            verbs:
            - update
          - apiGroups:
            - ""
            resources:
            - pods
            verbs:
            - get
          - apiGroups:
            - apps
            resources:
            - replicasets
            - deployments
            verbs:
            - get
          - apiGroups:
            - lb.faros.dev
            resources:
            - '*'
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch

    - name: ensure clusterrole exists
      k8s:
        state: present
        definition:
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRole
          metadata:
            name: hosted-loadbalancer-operator
          rules:
          - apiGroups:
            - ""
            resources:
            - nodes
            verbs:
            - list
          - apiGroups:
            - ""
            resources:
            - pods
            - services
            - services/finalizers
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            - serviceaccounts
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - apps
            resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch
          - apiGroups:
            - security.openshift.io
            resources:
            - securitycontextcontraints
            verbs:
            - get
            - list
            - update
            - patch
          - apiGroups:
            - security.openshift.io
            resourceNames:
            - privileged
            resources:
            - securitycontextconstraints
            verbs:
            - use
          - apiGroups:
            - rbac.authorization.k8s.io
            resources:
            - roles
            - clusterroles
            - rolebindings
            - clusterrolebindings
            verbs:
            - get
            - list
            - delete
            - create
            - update
            - patch
            - watch
          - apiGroups:
            - monitoring.coreos.com
            resources:
            - servicemonitors
            verbs:
            - get
            - create
          - apiGroups:
            - apps
            resourceNames:
            - operator
            resources:
            - deployments/finalizers
            verbs:
            - update
          - apiGroups:
            - ""
            resources:
            - pods
            verbs:
            - get
          - apiGroups:
            - apps
            resources:
            - replicasets
            - deployments
            verbs:
            - get
          - apiGroups:
            - lb.faros.dev
            resources:
            - '*'
            verbs:
            - create
            - delete
            - get
            - list
            - patch
            - update
            - watch

    - name: ensure rolebinding exists
      k8s:
        state: present
        definition:
          kind: RoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: hosted-loadbalancer-operator
            namespace: openshift-hosted-loadbalancer
          subjects:
          - kind: ServiceAccount
            name: hosted-loadbalancer-operator
          roleRef:
            kind: ClusterRole
            name: hosted-loadbalancer-operator
            apiGroup: rbac.authorization.k8s.io

    - name: ensure clusterrolebinding exists
      k8s:
        state: present
        definition:
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1
          metadata:
            name: hosted-loadbalancer-operator
          subjects:
          - kind: ServiceAccount
            name: hosted-loadbalancer-operator
            namespace: openshift-hosted-loadbalancer
          roleRef:
            kind: ClusterRole
            name: hosted-loadbalancer-operator
            apiGroup: rbac.authorization.k8s.io

    - name: ensure customresourcedefinition exists
      k8s:
        state: present
        definition:
          apiVersion: apiextensions.k8s.io/v1beta1
          kind: CustomResourceDefinition
          metadata:
            name: clusterloadbalancers.lb.faros.dev
            namespace: openshift-hosted-loadbalancer
          spec:
            version: v1beta1
            group: lb.faros.dev
            names:
              kind: ClusterLoadBalancer
              listKind: ClusterLoadBalancerList
              plural: clusterloadbalancers
              singular: clusterloadbalancer
            scope: Namespaced
            subresources:
              status: {}
            validation:
              openAPIV3Schema:
                type: object
                x-kubernetes-preserve-unknown-fields: true
            versions:
            - name: v1beta1
              served: true
              storage: true

    - name: ensure operator deployment exists
      k8s:
        state: present
        definition:
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: hosted-loadbalancer-operator
            namespace: openshift-hosted-loadbalancer
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: hosted-loadbalancer-operator
            template:
              metadata:
                labels:
                  name: hosted-loadbalancer-operator
              spec:
                serviceAccountName: hosted-loadbalancer-operator
                containers:
                - name: hosted-loadbalancer-operator
                  image: "quay.io/faros/hosted-loadbalancer-operator:latest"
                  imagePullPolicy: Always
                  volumeMounts:
                  - mountPath: /tmp/ansible-operator/runner
                    name: runner
                  env:
                  - name: WATCH_NAMESPACE
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.namespace
                  - name: POD_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: metadata.name
                  - name: OPERATOR_NAME
                    value: "hosted-loadbalancer-operator"
                  - name: ANSIBLE_GATHERING
                    value: explicit
                volumes:
                - name: runner
                  emptyDir: {}

    - name: ensure clusterloadbalancer exists
      k8s:
        state: present
        definition:
          apiVersion: lb.faros.dev/v1beta1
          kind: ClusterLoadBalancer
          metadata:
            name: example-clusterloadbalancer
            namespace: openshift-hosted-loadbalancer
          spec:
            vip_addr: "{{ loadbalancer_vip }}"
            router_id: '100'
            vip_pass: "{{ lookup('password', '/data/keepalived.pass chars=ascii_letters length=8') }}"
            node_selector:
              node-role.kubernetes.io/master: ""
