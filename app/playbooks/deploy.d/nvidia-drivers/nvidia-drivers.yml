- name: install nvidia gpu drivers
  hosts: localhost
  become: false
  gather_facts: false

  tasks:
    - name: ensure project exists
      k8s:
        state: present
        definition:
          apiVersion: project.openshift.io/v1
          kind: Project
          metadata:
            name: gpu-operator-resources
          spec:

    - name: ensure nfd subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: "{{ lookup('ini', 'nfd_name section=operators file=/app/versions.ini') }}"
            namespace: openshift-operators
          spec:
            channel: "{{ lookup('ini', 'nfd_channel section=operators file=/app/versions.ini') }}"
            name: "{{ lookup('ini', 'nfd_name section=operators file=/app/versions.ini') }}"
            source: "{{ lookup('ini', 'nfd_source section=operators file=/app/versions.ini') }}"
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: ensure nvidia subscription exists
      k8s:
        state: present
        definition:
          apiVersion: operators.coreos.com/v1alpha1
          kind: Subscription
          metadata:
            name: gpu-operator-certified
            namespace: openshift-operators
          spec:
            channel: "{{ lookup('ini', 'nvidia_channel section=operators file=/app/versions.ini') }}"
            name: "{{ lookup('ini', 'nvidia_name section=operators file=/app/versions.ini') }}"
            source: "{{ lookup('ini', 'nvidia_source section=operators file=/app/versions.ini') }}"
            sourceNamespace: openshift-marketplace
            installPlanApproval: "Automatic"

    - name: create nfd server
      k8s:
        state: present
        definition:
          apiVersion: nfd.openshift.io/v1
          kind: NodeFeatureDiscovery
          metadata:
            name: nfd-master-server
            namespace: gpu-operator-resources
          spec:
            operand:
              image: "registry.redhat.io/openshift4/ose-node-feature-discovery:v4.7.0"
              imagePullPolicy: Always
              namespace: node-feature-discovery-operator
            workerConfig:
              configData: |
                sources:
                  pci:
                    deviceLabelFields:
                      - "vendor"
                    deviceClassWhitelist:
                      - "0200"
                      - "03"
                      - "12"
      register: cp_install
      until: cp_install is success
      retries: 30
      delay: 15

    - name: create nvidia clusterpolicy
      k8s:
        state: present
        definition:
          apiVersion: nvidia.com/v1
          kind: ClusterPolicy
          metadata:
            name: gpu-cluster-policy
          spec:
            dcgmExporter:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia/k8s
              securityContext: {}
              version: "sha256:ced606933cd2210768ee8488b624c64ac0bdce6f05d9c4b4210e251370a14ff8"
              image: dcgm-exporter
              tolerations: []
            devicePlugin:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              version: "sha256:ea353fe57628f4d3c3e1cda126455d02f2277e3ee92fa9da441d409d76b2ac92"
              image: k8s-device-plugin
              tolerations: []
              args:
                - "--mig-strategy=single"
                - "--pass-device-specs=true"
                - "--fail-on-init-error=true"
                - "--device-list-strategy=envvar"
                - "--nvidia-driver-root=/run/nvidia/driver"
            driver:
              licensingConfig:
                configMapName: ""
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              repoConfig:
                configMapName: ""
                destinationDir: ""
              version: "sha256:017d2e2a1bc410e9d2ac116683fc49a6f28e935cadee86e712cc147ea0239469"
              image: driver
              tolerations: []
            gfd:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia
              securityContext: {}
              version: "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
              image: gpu-feature-discovery
              tolerations: []
              migStrategy: single
              sleepInterval: 60s
            operator:
              defaultRuntime: crio
              validator:
                image: cuda-sample
                imagePullSecrets: []
                repository: nvcr.io/nvidia/k8s
                version: "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2"
              deployGFD: true
            toolkit:
              nodeSelector: {}
              imagePullSecrets: []
              resources: {}
              affinity: {}
              podSecurityContext: {}
              repository: nvcr.io/nvidia/k8s
              securityContext: {}
              version: "sha256:c91875db54ad5d2a2ed396c8fd15cc666411ff35c58c634680946371d32507ae"
              image: container-toolkit
              tolerations: []
      register: cp_install
      until: cp_install is success
      retries: 30
      delay: 15
