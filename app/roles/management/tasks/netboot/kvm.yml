- name: get current kvm server disk capacity
  shell: >
    set -o pipefail;
    virsh vol-info --pool default --vol {{ virsh_name | default(inventory_hostname) }}.qcow2 |
    grep Capacity |
    awk '{ print $2; }'
  delegate_to: "{{ management_hostname }}"
  become: true
  register: kvm_vol_cap
  changed_when: false

- name: network boot kvm servers
  shell: >
    virsh vol-delete --pool default --vol {{ virsh_name | default(inventory_hostname) }}.qcow2 &&
    virsh vol-create-as --pool default --name {{ virsh_name | default(inventory_hostname) }}.qcow2
    --capacity {{ kvm_vol_cap.stdout.split('.')[0] }}G --format qcow2 &&
    virsh start {{ virsh_name | default(inventory_hostname) }}
  delegate_to: "{{ management_hostname }}"
  become: true
  changed_when: true
