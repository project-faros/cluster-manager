#!/usr/bin/env ansible-playbook
- name: calculate fqdn
  set_fact:
    dns_fqdn: "{{ dns_hostname }}.{{ dns_domain }}"
    dns_configured: false

- name: update wildcard entries
  lineinfile:
    line: "address=/{{ dns_domain }}/{{ dns_value }}"
    dest: /etc/dnsmasq.conf
    regexp: "^address=/{{ dns_domain }}/"
  delegate_to: dns
  when:
    - not dns_configured
    - dns_hostname == '*'
  notify: restart dnsmasq

- name: entry complete
  set_fact:
    dns_configured: true
  when:
    - not dns_configured
    - dns_hostname == '*'

- name: update srv entries
  lineinfile:
    line: "srv-host={{ dns_fqdn }},{{ dns_value.target }},{{ dns_value.weight }},{{ dns_value.priority }}"
    dest: /etc/dnsmasq.conf
  delegate_to: dns
  when:
    - not dns_configured
    - dns_type == 'SRV'
  notify: restart dnsmasq

- name: entry complete
  set_fact:
    dns_configured: true
  when:
    - not dns_configured
    - dns_type == 'SRV'

- name: update normal A records
  block:

    - name: look for existing domain entry
      shell: >
        uci show dhcp |
        grep '@domain' |
        grep ".name='{{ dns_fqdn }}'" |
        grep -Eo '@domain\[\d+\]'
      register: dns_id
      changed_when: False
      delegate_to: dns

    - name: read existing domain record
      shell: uci get dhcp.{{ dns_id.stdout }}.{{ item.key }}
      loop:
        - key: name
          target: "{{ dns_fqdn }}"
        - key: ip
          target: "{{ dns_value }}"
      loop_control:
        label: "{{ item.key }}"
      register: dns_record
      changed_when: False
      delegate_to: dns

    - name: update existing domain records
      shell: |
        uci set dhcp.{{ dns_id.stdout }}.{{ item.item.key }}={{ item.item.target }}
        uci commit
      when: item.stdout != item.item.target
      loop: "{{ dns_record.results }}"
      loop_control:
        label: "{{ item.item.key }} = {{ item.item.target }}"
      changed_when: True
      notify: commit changes
      delegate_to: dns

  rescue:
    - name: create new domain record
      shell: |
        uci add dhcp domain
        uci set dhcp.@domain[-1].name="{{ dns_fqdn }}"
        uci set dhcp.@domain[-1].ip="{{ dns_value }}"
        uci commit
      changed_when: True
      notify: commit changes
      delegate_to: dns

  when:
    - not dns_configured
    - lookup('dig', dns_fqdn) != dns_value
