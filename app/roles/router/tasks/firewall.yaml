- name: ensure masquerading is enabled
  firewalld:
    zone: "external"
    masquerade: 'yes'
    permanent: yes
    immediate: yes
    state: enabled

- name: enable ingress ssh to bastion
  firewalld:
    zone: external
    service: ssh
    permanent: yes
    immediate: yes
    state: enabled
  when: '"SSH to Bastion" in allowed_services'

- name: disable ingress ssh to bastion
  firewalld:
    zone: external
    service: ssh
    permanent: yes
    immediate: yes
    state: disabled
  when: '"SSH to Bastion" not in allowed_services'

- name: enable ingress https to cockpit
  firewalld:
    zone: external
    service: cockpit
    permanent: yes
    immediate: yes
    state: enabled
  when: '"HTTPS to Cockpit Panel" in allowed_services'

- name: disable ingress https to cockpit
  firewalld:
    zone: external
    service: cockpit
    permanent: yes
    immediate: yes
    state: disabled
  when: '"HTTPS to Cockpit Panel" not in allowed_services'

- name: enable ingress network routing
  firewalld:
    zone: external
    rich_rule: "rule family=ipv4 destination address={{ router_lan_subnet }} drop"
    permanent: yes
    immediate: yes
    state: disabled
  when: '"External to Internal Routing - DANGER" in allowed_services'

- name: disable ingress network routing
  firewalld:
    zone: external
    rich_rule: "rule family=ipv4 destination address={{ router_lan_subnet }} drop"
    permanent: yes
    immediate: yes
    state: enabled
  when: '"External to Internal Routing - DANGER" not in allowed_services'

- name: ensure internal masquerading is enabled
  firewalld:
    zone: "internal"
    masquerade: 'yes'
    permanent: yes
    immediate: yes
    state: enabled
  when: '"External to Internal Routing - DANGER" in allowed_services'

- name: ensure internal masquerading is disabled
  firewalld:
    zone: "internal"
    masquerade: 'no'
    permanent: yes
    immediate: yes
    state: enabled
  when: '"External to Internal Routing - DANGER" not in allowed_services'

- include_tasks: manage_forward_ports.yaml
  loop:
    - name: ingress https to cluster api
      rule: port=6443:proto=tcp:toport=6443:toaddr={{ router_loadbalancer }}
      exist: '{{ "HTTPS to Cluster API" in allowed_services and "External to Internal Routing - DANGER" not in allowed_services }}'
    - name: ingress http to cluster apps
      rule: port=80:proto=tcp:toport=80:toaddr={{ router_loadbalancer }}
      exist: '{{ "HTTP to Cluster Apps" in allowed_services and "External to Internal Routing - DANGER" not in allowed_services }}'
    - name: ingress https to cluster apps
      rule: port=443:proto=tcp:toport=443:toaddr={{ router_loadbalancer }}
      exist: '{{ "HTTPS to Cluster Apps" in allowed_services and "External to Internal Routing - DANGER" not in allowed_services }}'
  loop_control:
    loop_var: "outer"
    label: "{{ outer.name }}"
