#!/usr/bin/env ansible-playbook

- import_playbook: util_vm_facts.yml

- name: Configure Cluster Node DNS and DHCP entries
  hosts: cluster
  gather_facts: no
  serial: 1

  tasks:
    - name: setup dhcp
      include_role:
        name: dhcp
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dhcp.provider }}.yml"
        tasks_from: "{{ hostvars.dhcp.provider }}.yml"
        vars_from: "{{ hostvars.dhcp.provider }}.yml"
      tags:
        - dhcp
        - cluster

    - meta: flush_handlers

    - name: setup dns
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dns.provider }}.yml"
        tasks_from: "{{ hostvars.dns.provider }}.yml"
        vars_from: "{{ hostvars.dns.provider }}.yml"
      vars:
        dns_domain: "{{ cluster_name }}.{{ cluster_domain }}"
      tags:
        - dns
        - cluster

    - meta: flush_handlers

- name: Configure Cluster Node Management DNS and DHCP entries
  hosts: cluster:!virtual
  gather_facts: no
  serial: 1

  tasks:
    - name: setup mgmt dhcp
      include_role:
        name: dhcp
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dhcp.provider }}.yml"
        tasks_from: "{{ hostvars.dhcp.provider }}.yml"
        vars_from: "{{ hostvars.dhcp.provider }}.yml"
      vars:
        dhcp_mac_address: "{{ mgmt_mac_address }}"
        dhcp_ip: "{{ mgmt_hostname }}"
        dhcp_name: "{{ inventory_hostname }}-mgmt"
      when:
        - mgmt_hostname is defined
        - mgmt_mac_address is defined
      tags:
        - dhcp
        - cluster

    - meta: flush_handlers

    - name: setup mgmt dns
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dns.provider }}.yml"
        tasks_from: "{{ hostvars.dns.provider }}.yml"
        vars_from: "{{ hostvars.dns.provider }}.yml"
      vars:
        dns_hostname: "{{ inventory_hostname }}-mgmt"
        dns_value: "{{ mgmt_hostname }}"
        dns_domain: "{{ cluster_name }}.{{ cluster_domain }}"
      when:
        - mgmt_hostname is defined
      tags:
        - dns
        - cluster

    - meta: flush_handlers

- name: Add Management Links to Cockpit
  hosts: bastion_hosts
  gather_facts: no
  become: yes

  tasks:
    - name: create cockpit links
      include_role:
        name: cockpit-links
      vars:
        cockpit_links:
          - name: "{{ machine_name }} Management"
            url: "https://{{ machine_name }}-mgmt.{{ cluster_name }}.{{ cluster_domain }}"
            icon: pficon-container-node
      loop: "{{ groups.cluster }}"
      loop_control:
        loop_var: machine_name
      when: "machine_name not in groups.virtual"

- name: Configure Bastion DNS entries
  hosts: bastion_hosts
  gather_facts: no
  serial: 1

  tasks:
    - name: bastion DNS entries
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dns.provider }}.yml"
        tasks_from: "{{ hostvars.dns.provider }}.yml"
        vars_from: "{{ hostvars.dns.provider }}.yml"
      vars:
        dns_hostname: "{{ inventory_hostname }}"
        dns_domain: "{{ cluster_name }}.{{ cluster_domain }}"
        dns_value: "{{ ansible_host }}"
      tags:
        - dns
        - bastion

    - name: load balancer DNS entries
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dns.provider }}.yml"
        tasks_from: "{{ hostvars.dns.provider }}.yml"
        vars_from: "{{ hostvars.dns.provider }}.yml"
      vars:
        dns_hostname: "loadbalancer"
        dns_domain: "{{ cluster_name }}.{{ cluster_domain }}"
        dns_value: "{{ loadbalancer_vip }}"
      tags:
        - dns
        - bastion

- name: Configure Cluster DNS entries
  hosts: dns
  gather_facts: no
  serial: 1

  tasks:
    - name: load balancer DNS entries
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ provider }}.yml"
        tasks_from: "{{ provider }}.yml"
        vars_from: "{{ provider }}.yml"
      vars:
        dns_type: "{{ entry.type | default('A') }}"
        dns_hostname: "{{ entry.name }}"
        dns_domain: "{{ entry.domain | default(cluster_name + '.' + cluster_domain) }}"
        dns_value: "{{ entry.value }}"
      loop:
        - name: "api"
          value: "{{ hostvars[groups.bastion_hosts.0].loadbalancer_vip }}"
        - name: "api-int"
          value: "{{ hostvars[groups.bastion_hosts.0].loadbalancer_vip }}"
        - name: '*'
          domain: "apps.{{ cluster_name }}.{{ cluster_domain }}"
          value: "{{ hostvars[groups.bastion_hosts.0].loadbalancer_vip }}"
      loop_control:
        loop_var: entry
        label: "{{ entry.name }}"
      tags:
        - dns
        - loadbalancer

- name: Configure etcd DNS entries
  hosts: control_plane
  gather_facts: no
  serial: 1

  tasks:
    - name: etcd DNS entries
      include_role:
        name: dns
        defaults_from: "main.yml"
        handlers_from: "{{ hostvars.dns.provider }}.yml"
        tasks_from: "{{ hostvars.dns.provider }}.yml"
        vars_from: "{{ hostvars.dns.provider }}.yml"
      vars:
        dns_type: "{{ entry.type | default('A') }}"
        dns_hostname: "{{ entry.name }}"
        dns_domain: "{{ entry.domain | default(cluster_name + '.' + cluster_domain) }}"
        dns_value: "{{ entry.value }}"
      loop:
        - name: "etcd-{{ cp_node_id }}"
          value: "{{ ansible_host }}"
        - name: "_etcd-server-ssl"
          domain: "_tcp.{{ cluster_name }}.{{ cluster_domain }}"
          type: 'SRV'
          value:
            priority: 10
            weight: 2380
            target: "etcd-{{ cp_node_id }}.{{ cluster_name }}.{{ cluster_domain }}"
      loop_control:
        loop_var: entry
        label: "{{ entry.name }}"
      tags:
        - dns
        - etcd
